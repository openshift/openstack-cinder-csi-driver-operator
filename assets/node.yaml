apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    config.openshift.io/inject-proxy: csi-driver
    config.openshift.io/inject-proxy-cabundle: csi-driver
  name: openstack-cinder-csi-driver-node
  namespace: openshift-cluster-csi-drivers
spec:
  selector:
    matchLabels:
      app: openstack-cinder-csi-driver-node
  template:
    metadata:
      annotations:
        # This annotation prevents eviction from the cluster-autoscaler
        cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
      labels:
        app: openstack-cinder-csi-driver-node
    spec:
      containers:
        - args:
            - /bin/cinder-csi-plugin
            - --nodeid=$(NODE_ID)
            - --endpoint=$(CSI_ENDPOINT)
            - --cloud-config=$(CLOUD_CONFIG)
            - --v=${LOG_LEVEL}
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix://csi/csi.sock
            - name: CLOUD_CONFIG
              value: /etc/kubernetes/config/cloud.conf
          image: ${DRIVER_IMAGE}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 10
          name: csi-driver
          ports:
            - # Due to hostNetwork, this port is open on all nodes!
              containerPort: 10300
              name: healthz
              protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add:
                - SYS_ADMIN
            privileged: true
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/lib/kubelet
              mountPropagation: Bidirectional
              name: kubelet-dir
            - mountPath: /csi
              name: socket-dir
            - mountPath: /dev
              mountPropagation: HostToContainer
              name: pods-probe-dir
            - mountPath: /etc/selinux
              name: etc-selinux
            - mountPath: /sys/fs
              name: sys-fs
            - mountPath: /etc/kubernetes/static-pod-resources/configmaps/cloud-config
              name: cacert
            - mountPath: /etc/kubernetes/config
              name: config-cinderplugin
              readOnly: true
            - mountPath: /etc/kubernetes/secret
              name: secret-cinderplugin
              readOnly: true
        - args:
            - --csi-address=/csi/csi.sock
            - --health-port=10300
            - --v=${LOG_LEVEL}
            - --probe-timeout=10s
          image: ${LIVENESS_PROBE_IMAGE}
          imagePullPolicy: IfNotPresent
          name: csi-liveness-probe
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
        - args:
            - --csi-address=$(ADDRESS)
            - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
            - --http-endpoint=:10304
            - --v=5
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: /var/lib/kubelet/plugins/cinder.csi.openstack.org/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          image: ${NODE_DRIVER_REGISTRAR_IMAGE}
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - rm -rf /registration/cinder.csi.openstack.org /registration/cinder.csi.openstack.org-reg.sock
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: rhealthz
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
          name: node-driver-registrar
          ports:
            - containerPort: 10304
              name: rhealthz
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /registration
              name: registration-dir
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      serviceAccount: openstack-cinder-csi-driver-node-sa
      tolerations:
        - operator: Exists
      volumes:
        - hostPath:
            path: /var/lib/kubelet
            type: Directory
          name: kubelet-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/cinder.csi.openstack.org
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
          name: registration-dir
        - hostPath:
            path: /dev
            type: Directory
          name: pods-probe-dir
        - hostPath:
            path: /etc/selinux
            type: DirectoryOrCreate
          name: etc-selinux
        - hostPath:
            path: /sys/fs
            type: Directory
          name: sys-fs
        - # Extract ca-bundle.pem to /etc/kubernetes/static-pod-resources/configmaps/cloud-config if present.
          # Let the pod start when the ConfigMap does not exist or the certificate
          # is not preset there. The certificate file will be created once the
          # ConfigMap is created / the certificate is added to it.
          configMap:
            items:
              - key: ca-bundle.pem
                path: ca-bundle.pem
            name: cloud-provider-config
            optional: true
          name: cacert
        - configMap:
            items:
              - key: cloud.conf
                path: cloud.conf
            name: cloud-conf
          name: config-cinderplugin
        - name: secret-cinderplugin
          secret:
            items:
              - key: clouds.yaml
                path: clouds.yaml
            secretName: openstack-cloud-credentials
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 10%
    type: RollingUpdate
